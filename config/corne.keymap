/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
#define DEFAULT 0
#define LOWER   1
#define RAISE   2

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>



/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | SHFT |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RET  |
//                    | LALT| LWR | RAI |   | SHFT| SPC  | TAB |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E    &kp R &kp T   &kp Y       &kp U     &kp I     &kp O   &kp P    &kp BSPC
   &kp LSHFT &kp A &kp S &kp D    &kp F &kp G   &kp H       &kp J     &kp K     &kp L   &kp SEMI &kp SQT
   &kp LCTRL &kp Z &kp X &kp C    &kp V &kp B   &kp N       &kp M     &kp COMMA &kp DOT &kp FSLH &kp RET
                         &kp LALT &mo LOWER     &mo RAISE   &kp LSHFT &kp SPACE &kp TAB
                        >;
                };
                LOWER {
// -----------------------------------------------------------------------------------------
// | ESC  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  | BSPC| DEL | UP  |
// | CAPS |  {  |  [  |  (  |  -  |  `  |   |  \  |  _  |  )  |  ]  |  }  | DOWN|
// | CTRL |  "  |  +  |LC(C)|LC(V)|BTNXT|   | "|" |  /  |  =  |  ?  | LEFT|RIGHT|
//                    | LALT| LWR | RAI |   | SHFT| SPC | RET |
                        bindings = <
   &kp ESC   &kp EXCL &kp AT   &kp POUND   &kp DLLR  &kp PRCNT    &kp CARET &kp AMPS  &kp STAR    &kp BSPC  &kp DEL  &kp UP
   &kp CAPS  &kp LBRC &kp LBKT &kp KP_LPAR &kp MINUS &kp GRAVE    &kp BSLH  &kp UNDER &kp KP_RPAR &kp RBKT  &kp RBRC &kp DOWN
   &kp LCTRL &kp DQT  &kp PLUS &kp LC(C)   &kp LC(V) &bt BT_NXT   &kp PIPE  &kp FSLH  &kp EQUAL   &kp QMARK &kp LEFT &kp RIGHT
                               &kp LALT    &mo LOWER &mo RAISE    &kp LSHFT &kp SPACE &kp RET
                        >;
                };

                RAISE {
// -----------------------------------------------------------------------------------------
// | F1  |  F2 |  F3 |  F4 |  F5 |  F6 |   |  F7  |  F8 |  F9 | F10 | F11 | F12 |
// |VOLUP|  1  |  2  |  3  |  4  |  5  |   |  6   |  7  |  8  |  9  |  0  | GUI |
// |VOLDN|CMUTE|PP   |BTCLR|RGBTG|RGBEF|   |OUTBLE|     |     |EPTOG|PGUP |PGDN |
//                   | LALT| LWR | RAI |   | SHFT | SPC | BSPC|
                        bindings = <
   &kp F1       &kp F2     &kp F3   &kp F4     &kp F5          &kp F6            &kp F7         &kp F8       &kp F9   &kp F10           &kp F11   &kp F12 
   &kp C_VOL_UP &kp N1     &kp N2   &kp N3     &kp N4          &kp N5            &kp N6         &kp N7       &kp N8   &kp N9            &kp N0    &kp K_CMENU
   &kp C_VOL_DN &kp C_MUTE &kp C_PP &bt BT_CLR &rgb_ug RGB_TOG &rgb_ug RGB_EFF   &out OUT_BLE   &none        &none    &ext_power EP_TOG &kp PG_UP &kp PG_DN
                    	            &kp LALT   &mo LOWER       &mo RAISE         &kp LSHFT      &kp SPACE    &kp BSPC
                        >;
                };
        };
};
