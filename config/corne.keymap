/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
 
#define DEFAULT  0
#define LOWER    1
#define RAISE    2
#define THREE    3


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>



&spi1 {
	compatible = "nordic,nrf-spim";
	/* Cannot be used together with i2c0. */
	status = "okay";
	mosi-pin = <6>;
	// Unused pins, needed for SPI definition, but not used by the ws2812 driver itself.
	sck-pin = <5>;
	miso-pin = <7>;

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";
		label = "SK6812mini";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <27>; /* There are per-key RGB, but the first 6 are underglow */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
	};
};

/ {
	chosen {
		zmk,underglow = &led_strip;
	};
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        THREE {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | ESC  |  C  |  I  |  J  |  M  |  T  |   |  H  |  J   |  K  |  L  |  ;  | '    |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RET  |
//                    | LALT| LWR |SPC  |   | SHFT| SPC  | TAB |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R      &kp T     &kp Y            &kp U           &kp I           &kp O   &kp P    &kp BSPC
   &kp ESC &mt C A &mt I S &mt J D &mt M F  &mt T G    &kp H            &kp J           &kp K           &kp L   &kp SEMI &mt SQT RET
   &kp LCTRL &kp Z &kp X &kp C &kp V      &kp B     &kp N            &kp M           &kp COMMA       &kp DOT &kp FSLH &kp RET
                               &kp LSHIFT &mo LOWER &lt RAISE SPACE  &kp LSHFT &kp SPACE &kp TAB
                        >;
                };
		
                RAISE { 
// -----------------------------------------------------------------------------------------
// |     | 11 | 12 | 13 | 14  | 15  |   |  F7  |  F8 |  F9 | F10 | F11 | F12 |
// |     | 1  | 2  | 3  |  4  |  5  |   |  6   |  7  |  8  |  9  |  0  |LWIN |
// |     | 6  | 7  | 8  |  9  | 10  |   |      |     |     |     |PGUP |PGDN |
//                   | LALT| LWR | RAI |   | SHFT | SPC | BSPC|
                        bindings = <
   &none &kp N11 &kp N12   &kp N13   &kp N14    &kp N15            &kp F7    &kp F8    &kp F9   &kp F10 &kp F11   &kp F12 
   &none  &kp N1 &kp N2   &kp N3   &kp N4    &kp N5            &kp N6    &kp N7    &kp N8   &kp N9  &kp N0    &kp LWIN
   &none  &kp N6  &kp N7 &kp N8    &kp N9     &kp N10             &none     &none     &none    &none   &kp PG_UP &kp PG_DN
                    	  &kp LALT     &mo LOWER &lt RAISE SPACE  &mt LSHFT SPACE &kp SPACE &kp BSPC
                        >;
                };
        };
};
